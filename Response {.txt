Response {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    res: 
    IncomingMessage {
        _readableState:
        ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
        readable: false,
        _events:
        [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
        _eventsCount: 4,
        _maxListeners: undefined,
        socket:
        Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 1332,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
        connection:
        Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 1332,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers:
        { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '1103',
        etag: 'W/"44f-250laDbBjPgZQSY8AvSzX1n5pIk"',
        date: 'Sun, 19 Jul 2020 12:29:57 GMT',
        connection: 'close' },
        rawHeaders:
        [ 'X-Powered-By',
        'Express',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '1103',
        'ETag',
        'W/"44f-250laDbBjPgZQSY8AvSzX1n5pIk"',
        'Date',
        'Sun, 19 Jul 2020 12:29:57 GMT',
        'Connection',
        'close' ],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client:
        Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 1332,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
        _consuming: false,
        _dumped: false,
        req:
        ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
            'POST /petition HTTP/1.1\r\nHost: 127.0.0.1:58702\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nConnection: close\r\nContent-Length: 0\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        insecureHTTPParser: undefined,
        path: '/petition',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
        text:
        '<!DOCTYPE html>\r\n<html lang="en">\r\n    <head>\r\n        <meta charset="UTF-8" />\r\n        <meta name="viewport" content="width=device-width, initial-scale=1.0" />\r\n        <link rel="stylesheet" href="/style.css" />\r\n        <title>Document</title>\r\n    </head>\r\n    <body>\r\n        <navbar>\r\n            <p><a href="/petition/signers">All Signers</a> | <a href="/petition/signed">My Signature</a> | <a href="/edit-profile">My Profile</a> | <a 
href="/logout">Logout</a>\r\n        </navbar>\r\n\r\n        <h1 id="title">Petition</h1>\r\n        <p>Hey  sign the petition</p>\r\n        <p class="error">something went wrong! Please sign in the white space!</p>\r\n        <form method="POST">\r\n\r\n            <label for="signature"><p>Your signature:</p></label>\r\n            <input type="hidden" id="signature" name="signature" value="" />\r\n            <canvas id="canvas" width="600" height="100"></canvas>\r\n            <button id="submit">Sign!</button>\r\n        </form>\r\n        <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>\r\n        
<script src="/script.js"></script>\r\n    </body>\r\n</html>' },
    request:
    Test {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _agent: false,
        _formData: null,
        method: 'POST',
        url: 'http://127.0.0.1:58702/petition',
        _header: { 'user-agent': 'node-superagent/3.8.3' },
        header: { 'User-Agent': 'node-superagent/3.8.3' },
        writable: true,
        _redirects: 0,
        _maxRedirects: 0,
        cookies: '',
        qs: {},
        _query: [],
        qsRaw: [],
        _redirectList: [],
        _streamRequest: false,
        _buffer: true,
        app:
        Server {
        insecureHTTPParser: undefined,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 1330 },
        _asserts: [],
        _server:
        Server {
        insecureHTTPParser: undefined,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 1330 },
        req:
        ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
            'POST /petition HTTP/1.1\r\nHost: 127.0.0.1:58702\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nConnection: close\r\nContent-Length: 0\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        insecureHTTPParser: undefined,
        path: '/petition',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
        protocol: 'http:',
        host: '127.0.0.1:58702',
        _endCalled: true,
        _callback: [Function],
        _fullfilledPromise: Promise { [Circular] },
        res:
        IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
            '<!DOCTYPE html>\r\n<html lang="en">\r\n    <head>\r\n        <meta charset="UTF-8" />\r\n        <meta name="viewport" content="width=device-width, initial-scale=1.0" />\r\n        <link rel="stylesheet" href="/style.css" />\r\n        <title>Document</title>\r\n    </head>\r\n    <body>\r\n        <navbar>\r\n            <p><a href="/petition/signers">All Signers</a> | <a href="/petition/signed">My Signature</a> | <a href="/edit-profile">My Profile</a> | 
<a href="/logout">Logout</a>\r\n        </navbar>\r\n\r\n        <h1 id="title">Petition</h1>\r\n        <p>Hey  sign the petition</p>\r\n        <p class="error">something went wrong! Please sign in the white space!</p>\r\n        <form method="POST">\r\n\r\n            <label for="signature"><p>Your signature:</p></label>\r\n            <input type="hidden" id="signature" name="signature" value="" />\r\n            <canvas id="canvas" width="600" height="100"></canvas>\r\n            <button id="submit">Sign!</button>\r\n        </form>\r\n        <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>\r\n     
<script src="/script.js"></script>\r\n    </body>\r\n</html>' },
        response: [Circular],
        called: true },
    req:
    ClientRequest {
        _events:
        [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket:
        Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 1332,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
        connection:
        Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 1332,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
        _header:
        'POST /petition HTTP/1.1\r\nHost: 127.0.0.1:58702\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/3.8.3\r\nConnection: close\r\nContent-Length: 0\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent:
        Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        insecureHTTPParser: undefined,
        path: '/petition',
        _ended: true,
        res:
        IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
            '<!DOCTYPE html>\r\n<html lang="en">\r\n    <head>\r\n        <meta charset="UTF-8" />\r\n        <meta name="viewport" content="width=device-width, initial-scale=1.0" />\r\n        <link rel="stylesheet" href="/style.css" />\r\n        <title>Document</title>\r\n    </head>\r\n    <body>\r\n        <navbar>\r\n            <p><a href="/petition/signers">All Signers</a> | <a href="/petition/signed">My Signature</a> | <a href="/edit-profile">My Profile</a> | 
<a href="/logout">Logout</a>\r\n        </navbar>\r\n\r\n        <h1 id="title">Petition</h1>\r\n        <p>Hey  sign the petition</p>\r\n        <p class="error">something went wrong! Please sign in the white space!</p>\r\n        <form method="POST">\r\n\r\n            <label for="signature"><p>Your signature:</p></label>\r\n            <input type="hidden" id="signature" name="signature" value="" />\r\n            <canvas id="canvas" width="600" height="100"></canvas>\r\n            <button id="submit">Sign!</button>\r\n        </form>\r\n        <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>\r\n     
<script src="/script.js"></script>\r\n    </body>\r\n</html>' },
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]:
        [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array] } },
    text:
    '<!DOCTYPE html>\r\n<html lang="en">\r\n    <head>\r\n        <meta charset="UTF-8" />\r\n        <meta name="viewport" content="width=device-width, initial-scale=1.0" />\r\n        <link rel="stylesheet" href="/style.css" />\r\n        <title>Document</title>\r\n    </head>\r\n    <body>\r\n        <navbar>\r\n            <p><a href="/petition/signers">All Signers</a> | <a href="/petition/signed">My Signature</a> | <a href="/edit-profile">My Profile</a> | <a href="/logout">Logout</a>\r\n        </navbar>\r\n\r\n        <h1 id="title">Petition</h1>\r\n        <p>Hey  sign the petition</p>\r\n        <p class="error">something went wrong! Please sign in the white space!</p>\r\n        <form method="POST">\r\n\r\n            <label for="signature"><p>Your signature:</p></label>\r\n            <input type="hidden" id="signature" name="signature" value="" />\r\n            <canvas id="canvas" width="600" height="100"></canvas>\r\n 
        <button id="submit">Sign!</button>\r\n        </form>\r\n        <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>\r\n        <script src="/script.js"></script>\r\n    </body>\r\n</html>',
    body: {},
    files: undefined,
    buffered: true,
    headers:
    { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '1103',
        etag: 'W/"44f-250laDbBjPgZQSY8AvSzX1n5pIk"',
        date: 'Sun, 19 Jul 2020 12:29:57 GMT',
        connection: 'close' },
    header:
    { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '1103',
        etag: 'W/"44f-250laDbBjPgZQSY8AvSzX1n5pIk"',
        date: 'Sun, 19 Jul 2020 12:29:57 GMT',
        connection: 'close' },
    statusCode: 200,
    status: 200,
    statusType: 2,
    info: false,
    ok: true,
    redirect: false,
    clientError: false,
    serverError: false,
    error: false,
    created: false,
    accepted: false,
    noContent: false,
    badRequest: false,
    unauthorized: false,
    notAcceptable: false,
    forbidden: false,
    notFound: false,
    unprocessableEntity: false,
    type: 'text/html',
    charset: 'utf-8',
    links: {},
    setEncoding: [Function: bound ],
    redirects: [] }

    at supertest.post.then.response (index.test.js:111:21)